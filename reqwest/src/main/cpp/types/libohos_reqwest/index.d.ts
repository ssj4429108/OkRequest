/* auto-generated by OHOS-RS */
/* eslint-disable */



export interface ArkRequest {
  url: string
  method: string
  headers?: Record<string, string>
  protocol?: string
  body?: ArrayBuffer
  dns?: Record<string, Array<string>>
}

export interface ArkResponse {
  code: number
  headers?: Record<string, string>
  body?: ArkResponseBody
  protocol: string
  message: string
}

export interface ArkResponseBody {
  body: ArrayBuffer
  contentLength: bigint
}

export interface Cert {
  cert: string
  ty: string
}

export interface Config {
  timeout: number
  tls?: TlsConfig
  ignoreSsl?: boolean
  forceRustlsSsl?: boolean
  noProxy?: boolean
}

export interface TlsConfig {
  caCert?: Array<Cert>
  clientCert?: string
}

export declare class ArkHttpClient {
  config: Config
  constructor(config?: Config | undefined | null)
  send(request: ArkRequest): Promise<ArkResponse>
}

